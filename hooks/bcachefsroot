#!/usr/bin/bash


#			*** Make sure 'LABEL' matches your root system label !!! ***
LABEL=ROOT2
root2='/@root'			# This is your default root where you'll be able to swap for other snapshots


run_latehook() {

	#/usr/lib/initcpio/init

	real_root=/real_root
	new_root=/new_root
	mkdir -p $real_root $new_root

	mnt=/mnt
	snapshot_dir=/.snapshots

	mount -m LABEL="$LABEL" $mnt
	
	cd $mnt$snapshot_dir

	echo -e "\nWhat would you like to do?\n
<s> boot into a snapshot
<r> boot main root system
<m> move snapshot
<b> enter bash
<ENTER> boot /@root system\n"

	read -s -t 15 -n 1 key

	if [[ "$key" = 's' ]]; then
	
		echo -e "\nType the name of the snapshot you would like to load.\n"
		
		ls "$mnt$snapshot_dir"

		echo

		read snapshot
	
		if [ -d "$snapshot" ]; then

			umount $new_root
			mount --bind "$mnt$snapshot_dir/$snapshot" $new_root
			mount --bind "$mnt$snapshot_dir" "$new_root$snapshot_dir"

		else
			
			echo -e "\nThe snapshot \'snapshot\' does not exist!\n"
			
			sleep 2

			mount --bind $mnt $new_root
			mount --bind "$mnt$snapshot_dir" "$new_root$snapshot_dir"

		fi
	
	elif [[ "$key" = 'r' ]]; then
	
		umount $new_root
		mount --bind $mnt $new_root
		mount --bind "$mnt$snapshot_dir" "$new_root$snapshot_dir"

	elif [[ "$key" = 'm' ]]; then

		echo -e "\nType the name of the snapshot you would like to recover to @root.
(Names must not contain any spaces!)\n"
		
		ls

		echo

		read snapshot
	
		if [ -d "$snapshot" ]; then
			
			umount $new_root
			
			#mv $mnt$root2 $mnt$snapshot_dir/$root2_old
			

			bcachefs subvolume delete "$mnt$snapshot_dir$root2-old"
			rm -rf "$mnt$snapshot_dir$root2-old"
			bcachefs subvolume snapshot "$mnt$root2" "$mnt$snapshot_dir$root2-old"

			bcachefs subvolume delete /mnt/@root
			rm -rf /mnt/@root

			bcachefs subvolume snapshot "$mnt$snapshot_dir/$snapshot" /mnt/@root

			#mv "$snapshot" $mnt$root2

			mount --bind $mnt$root2 $new_root

			mkdir -p $new_root$snapshot_dir
			mount --bind "$mnt$snapshot_dir" "$new_root$snapshot_dir"

		else
			
			echo -e "\nThe snapshot \'snapshot\' does not exist!\n"
			
			sleep 2

			mount --bind $mnt $new_root
			mount --bind "$mnt$snapshot_dir" "$new_root$snapshot_dir"

		fi



	elif [[ "$key" = 'b' ]]; then

		echo "Entering bash..."
		bash
	
	else
		
		echo "Booting default (/@root)..."
		sleep 1

		umount $new_root
		
		mount --bind "$mnt$root2" $new_root
		mount --bind "$mnt$snapshot_dir" "$new_root$snapshot_dir"

	fi
	

}
